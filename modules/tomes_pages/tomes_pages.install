<?php 
/**
 * @file
 * Install, update and uninstall functions for the the Tomes install profile.
 */

/**
 * Implements hook_install().
 *
 * Performs actions to set up the site for this profile.
 *
 * @see system_install()
 */
function tomes_pages_install() {
  // Enable some standard blocks.
  $default_theme = 'tomes';

  variable_set('theme_default', $default_theme);

  // Execute all module updates
  $sandbox = array();
  for ($i = 10000; $i < 10099; $i++){
    $func = 'tomes_pages_update_'.$i; // rename savvis to your module name
    if (function_exists($func)){
      $func($sandbox);
    }
  }
}

/**
 * Implements hook_update_N().
 *   Set menu items
 */
function tomes_pages_update_10001(&$sandbox) {
  $default_theme = 'tomes';
  module_enable(array($default_theme));
  variable_set('theme_default', $default_theme);
  variable_set('admin_theme', $default_theme);
  
   // Place blocks in specific region
  $values = array(
    array(
      'module' => 'system',
      'delta' => 'main-menu',
      'region' => 'menu_bar',  
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'region' => 'content',  
    ),

  );
  // Unset any block elements that are present in the database already
  foreach ($values as $position => $record) {
    $result = db_select('block', 'b')
      ->fields('b')
      ->condition('module', $record['module'], '=')
      ->condition('delta', $record['delta'], '=')
      ->condition('theme', 'tomes', '=')
      ->execute()
      ->fetchAssoc();
    if (!empty($result['bid'])) {
      unset($values[$position]);
    }
  }
  // Insert into the database any block values that aren't already present
  foreach ($values as $record) {
    $record['theme']  = 'tomes';
    $record['pages']  = '';
    $record['cache']  = -1;
    $record['status'] = 1;
    $record['weight'] = -1;
    $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
    $query->values($record);
    $query->execute();
  }

  return t('Yep');
}

/**
 * Implements hook_update_N().
 *   Sets social media links
 */
function tomes_pages_update_10002(&$sandbox) {
  module_enable(array('contact', 'pathauto'));
  
  variable_set('social_media_facebook','http://facebook.com/tomesimprov');
  variable_set('social_media_twitter','http://twitter.com/tomesimprov');
  variable_set('social_media_mail', '/contact');
  variable_set('pathauto_node_pattern', '[node:title]');
  
  return t('Success! Set social media link and pathauto pattern');
}


/**
 * Implements hook_update_N().
 *   Set menu items
 */
function tomes_pages_update_10016(&$sandbox) {

  //generate the menu links array
  //for the header menu

  $menu_links = array();
  
  $menu_links['shows'] = array(
    'link_path' => '<front>',
    'link_title' => t('Shows'),
    'weight' => 1,
  );
  $menu_links['contact'] = array(
    'link_path' => 'contact',
    'link_title' => t('Contact'),
    'weight' => 3,
  );

  //run menu_link_save on all of the items.
  foreach ($menu_links as $menu_link) {
    $menu_link['menu_name'] = 'main-menu';
    $menu_link['module'] = 'menu';
    menu_link_save ($menu_link);
  }

  menu_cache_clear_all();

  return t('Set menu items');
}
